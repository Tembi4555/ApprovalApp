// <auto-generated />
using System;
using ApprovalApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApprovalApp.API.Migrations
{
    [DbContext(typeof(ApprovalDbContext))]
    [Migration("20241212042023_AddUserEntity")]
    partial class AddUserEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("ApprovalApp.Data.Entities.PersonEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.TicketApprovalEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ApprovingPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("Iteration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberQueue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Новая");

                    b.Property<long>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApprovingPersonId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketsApprovals", (string)null);
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.TicketEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long>("IdAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdAuthor");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.TicketApprovalEntity", b =>
                {
                    b.HasOne("ApprovalApp.Data.Entities.PersonEntity", "Person")
                        .WithMany("TicketApprovalEntities")
                        .HasForeignKey("ApprovingPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApprovalApp.Data.Entities.TicketEntity", "Ticket")
                        .WithMany("TicketApprovalEntities")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.TicketEntity", b =>
                {
                    b.HasOne("ApprovalApp.Data.Entities.PersonEntity", "Person")
                        .WithMany("Tickets")
                        .HasForeignKey("IdAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.PersonEntity", b =>
                {
                    b.Navigation("TicketApprovalEntities");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ApprovalApp.Data.Entities.TicketEntity", b =>
                {
                    b.Navigation("TicketApprovalEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
